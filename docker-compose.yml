services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3333:3333
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - web
    depends_on:
      - postgres
    command: pnpm run dev

  postgres:
    container_name: postgres
    image: postgres:16
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - web
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PSWD}
    healthcheck:
      test: rabbitmq-diagnostics --quiet check_running && rabbitmq-diagnostics --quiet check_local_alarms
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - web
      
  workers:
    container_name: workers
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - web
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: pnpm run workers

volumes:
  postgres_data:
  redisdata:

networks:
  web:
    driver: bridge